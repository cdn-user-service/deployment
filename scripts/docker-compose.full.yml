version: '3.8'

services:

  frontend-cdn-user:
    container_name: frontend-cdn-user 
    image: ${DOCKER_USERNAME}/frontend-cdn-user:latest
    ports:
      - "3001:80"
    restart: always
    depends_on:
      - master-cdn-user

  frontend-cdn-admin:
    container_name: frontend-cdn-admin
    image: ${DOCKER_USERNAME}/frontend-cdn-admin:latest
    ports:
      - "3002:80"
    restart: always
    depends_on:
      - master-cdn-admin

  frontend-dns-user:
    container_name: frontend-dns-user 
    image: ${DOCKER_USERNAME}/frontend-dns-user:latest
    ports:
      - "3003:80"
    restart: always
    depends_on:
      - master-dns-user

  frontend-dns-admin:
    container_name: frontend-dns-admin 
    image: ${DOCKER_USERNAME}/frontend-dns-admin:latest
    ports:
      - "3003:80"
    restart: always
    depends_on:
      - master-dns-admin

  master-cdn-user:
    container_name: cdn-user-service
    image: ${DOCKER_USERNAME}/cdn-user-service:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - mysql
      - redis

  master-account-service:
    container_name: account-service
    image: ${DOCKER_USERNAME}/account-service:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
 
  master-cdn-admin-service:
    container_name: cdn-admin-service
    image: ${DOCKER_USERNAME}/cdn-admin-service:latest
    ports:
      - "8082:8080"
    depends_on:
      - mysql
      - redis

  master-dns-user-service:
    container_name: dns-user-service
    image: ${DOCKER_USERNAME}/dns-user-service:latest
    ports:
      - "8083:8080"
    depends_on:
      - mysql
      - redis

  master-dns-admin-service:
    container_name: dns-admin-service
    image: ${DOCKER_USERNAME}/dns-admin-service:latest
    ports:
      - "8084:8080"
    depends_on:
      - mysql
      - redis    

  master-monitor-service:
    container_name: monitor-service
    image: ${DOCKER_USERNAME}/monitor-service:latest
    ports:
      - "8085:8080"
    depends_on:
      - mysql
      - redis    

  master-security-service:
    container_name: security-service
    image: ${DOCKER_USERNAME}/security-service:latest
    ports:
      - "8086:8080"
    depends_on:
      - mysql
      - redis   

  master-notification-service:
    container_name: notification-service
    image: ${DOCKER_USERNAME}/notification-service:latest
    ports:
      - "8087:8080"
    depends_on:
      - mysql
      - redis   

  node-agent-service:
    image: agent-service:latest
    container_name: agent-service
    env_file:
      - ../.env
    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ../volumes/mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ../volumes/redis_data:/data
    ports:
      - "6379:6379"
      
env_file:
  - ../.env